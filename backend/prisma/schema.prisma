// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String     @id @default(uuid())
  email             String     @unique
  password          String
  name              String?
  type              String     @default("tenant")
  wallet_address    String?
  created_at        DateTime   @default(now())
  updated_at        DateTime   @updatedAt
  deleted_at        DateTime?
  CreatedProperties Property[] @relation(name: "CreatedProperties")
  RentedProperties  Property[] @relation(name: "RentedProperties")
}

model PasswordReset {
  id         String   @id @default(uuid())
  user_id    String
  token      String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  status     String   @default("pending")
}

model StripeCheckoutSession {
  email                      String   @unique
  stripe_checkout_session_id String   @unique
  status                     String   @default("pending")
  created_at                 DateTime @default(now())
  updated_at                 DateTime @updatedAt

  @@unique([email, stripe_checkout_session_id])
}

model Property {
  id                 String   @id @default(uuid())
  created_by_user_id String
  rented_by_user_id  String?
  name               String
  description        String
  location           String
  amount             Float
  num_bedrooms       Int
  num_bathrooms      Int
  status             String
  contract_address   String?
  currency           String
  CreatedByUser      User?    @relation(name: "CreatedProperties", fields: [created_by_user_id], references: [id])
  RentedByUser       User?    @relation(name: "RentedProperties", fields: [rented_by_user_id], references: [id])
  created_at         DateTime @default(now())
  updated_at         DateTime @updatedAt
}
